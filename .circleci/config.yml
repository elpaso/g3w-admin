version: 2.1

jobs:
  build:
    parameters:
      # Appended to the compose file, for instance 310 becomes: docker-compose.310.yml
      qgis_version:
        type: string
    docker:
      - image: circleci/buildpack-deps:bionic
    steps:
      - checkout
      #- run: git submodule sync
      #- run: git submodule update --init (requires credentials for spid_redirect)
      - setup_remote_docker
      - run:
          name: Starting Docker compose
          command: docker-compose -f docker-compose.<< parameters.qgis_version >>.yml up -d
      - run:
          name: Copying code into the container
          command: docker cp ./ "$(docker-compose -f docker-compose.<< parameters.qgis_version >>.yml ps -q g3w-suite)":/code
      - run:
          name: Installing Python requirements
          command: docker-compose -f docker-compose.<< parameters.qgis_version >>.yml exec g3w-suite sh -c "cd /code/ && pip3 install -r requirements_docker.txt"
      - run:
          name: Installing Caching Python requirements
          command: docker-compose -f docker-compose.<< parameters.qgis_version >>.yml exec g3w-suite sh -c "cd /code/ && pip3 install -r g3w-admin/caching/requirements.txt"
      - run:
          name: Installing Filemanager Python requirements
          command: docker-compose -f docker-compose.<< parameters.qgis_version >>.yml exec g3w-suite sh -c "cd /code/ && pip3 install -r g3w-admin/filemanager/requirements.txt"
      - run:
          name: Building g3w-suite
          command: docker-compose -f docker-compose.<< parameters.qgis_version >>.yml exec g3w-suite sh -c "/code/ci_scripts/build_suite.sh"
      - run:
          name: Setting up g3w-suite
          command: docker-compose -f docker-compose.<< parameters.qgis_version >>.yml exec g3w-suite sh -c "/code/ci_scripts/setup_suite.sh"
      - run:
          name: Starting Django
          command: docker-compose -f docker-compose.<< parameters.qgis_version >>.yml exec g3w-suite sh -c "cd /code/g3w-admin && python3 manage.py runserver 0.0.0.0:8000"
          background: true
      - run:
          name: Waiting for Django on port 8000
          command: docker-compose -f docker-compose.<< parameters.qgis_version >>.yml exec g3w-suite sh -c "wait-for-it -h localhost -p 8000 -t 240" # Wait for django
      - run:
          name: Running g3w-admin core tests
          command: docker-compose -f docker-compose.<< parameters.qgis_version >>.yml exec g3w-suite sh -c "cd /code/g3w-admin && python3 manage.py test core"
      - run:
          name: Running qdjango tests
          command: docker-compose -f docker-compose.<< parameters.qgis_version >>.yml exec g3w-suite sh -c "cd /code/g3w-admin && python3 manage.py test qdjango"
      - run:
          name: Running usermanage tests
          command: docker-compose -f docker-compose.<< parameters.qgis_version >>.yml exec g3w-suite sh -c "cd /code/g3w-admin && python3 manage.py test usersmanage"
      - run:
          name: Running client tests
          command: docker-compose -f docker-compose.<< parameters.qgis_version >>.yml exec g3w-suite sh -c "cd /code/g3w-admin && python3 manage.py test client"
      - run:
          name: Running editing tests
          command: docker-compose -f docker-compose.<< parameters.qgis_version >>.yml exec g3w-suite sh -c "cd /code/g3w-admin && python3 manage.py test editing.tests"
      - run:
          name: Running caching tests
          command: docker-compose -f docker-compose.<< parameters.qgis_version >>.yml exec g3w-suite sh -c "cd /code/g3w-admin && python3 manage.py test caching"
      - run:
          name: Running filemanager tests
          command: docker-compose -f docker-compose.<< parameters.qgis_version >>.yml exec g3w-suite sh -c "cd /code/g3w-admin && python3 manage.py test filemanager"
      - run:
          name: Running qplotly tests
          command: docker-compose -f docker-compose.<< parameters.qgis_version >>.yml exec g3w-suite sh -c "cd /code/g3w-admin && python3 manage.py test qplotly"
      - run:
          name: Running openrouteservice tests
          command: docker-compose -f docker-compose.<< parameters.qgis_version >>.yml exec g3w-suite sh -c "cd /code/g3w-admin && python3 manage.py test openrouteservice"


workflows:
  all-tests:
    jobs:
      - build:
          matrix:
            parameters:
              qgis_version: ['316']
